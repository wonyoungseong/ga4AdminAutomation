apiVersion: v1
kind: ConfigMap
metadata:
  name: backend-config
  namespace: ga4-admin
data:
  DATABASE_URL: "postgresql+asyncpg://postgres:CHANGE_THIS_STRONG_PASSWORD@postgres:5432/ga4_admin"
  REDIS_URL: "redis://redis:6379"
  FRONTEND_URL: "https://your-domain.com"
  ENVIRONMENT: "production"
  LOG_LEVEL: "INFO"

---
apiVersion: v1
kind: Secret
metadata:
  name: backend-secret
  namespace: ga4-admin
type: Opaque
stringData:
  SECRET_KEY: "CHANGE_THIS_TO_A_SECURE_RANDOM_STRING_MIN_32_CHARS"
  GOOGLE_CLIENT_ID: "your-google-client-id.apps.googleusercontent.com"
  GOOGLE_CLIENT_SECRET: "your-google-client-secret"
  SMTP_USER: "your-email@gmail.com"
  SMTP_PASSWORD: "your-app-specific-password"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: ga4-admin
  labels:
    app: backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: backend
        image: ga4-admin/backend:latest
        ports:
        - containerPort: 8000
        envFrom:
        - configMapRef:
            name: backend-config
        - secretRef:
            name: backend-secret
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: backend-logs
          mountPath: /app/logs
      volumes:
      - name: backend-logs
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: backend
  namespace: ga4-admin
spec:
  selector:
    app: backend
  ports:
  - port: 8000
    targetPort: 8000
  type: ClusterIP

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: backend-hpa
  namespace: ga4-admin
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: backend
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80