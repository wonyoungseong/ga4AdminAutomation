# GA4 Admin Portal - Optimized Server Configuration
# High-performance production server with advanced caching and security

# HTTP to HTTPS redirect
server {
    listen 80;
    listen [::]:80;
    server_name ga4-admin.yourdomain.com api.ga4-admin.yourdomain.com;
    
    # Security headers even for redirects
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    
    # Let's Encrypt ACME challenge
    location ^~ /.well-known/acme-challenge/ {
        root /var/www/html;
        allow all;
    }
    
    # Redirect everything else to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# Main HTTPS server for frontend
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name ga4-admin.yourdomain.com;

    # SSL configuration
    ssl_certificate /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/key.pem;
    ssl_dhparam /etc/nginx/ssl/dhparam.pem;

    # Connection limits
    limit_conn conn_limit_per_ip 50;
    limit_conn conn_limit_per_server 1000;

    # Global rate limiting
    limit_req zone=global burst=100 nodelay;

    # Security headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net https://unpkg.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' https://api.ga4-admin.yourdomain.com wss://ga4-admin.yourdomain.com; frame-ancestors 'none';" always;

    # Root and index
    root /var/www/html;
    index index.html;

    # Proxy settings template for all locations
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Port $server_port;

    # Timeouts
    proxy_connect_timeout 30s;
    proxy_send_timeout 30s;
    proxy_read_timeout 30s;

    # Buffering
    proxy_buffering on;
    proxy_buffer_size 4k;
    proxy_buffers 8 4k;
    proxy_busy_buffers_size 8k;

    # API routes with caching
    location /api {
        # Rate limiting for API
        limit_req zone=api burst=50 nodelay;
        
        proxy_pass http://backend;
        proxy_set_header Connection "";
        
        # Cache configuration
        proxy_cache api_cache;
        proxy_cache_key "$scheme$request_method$host$request_uri";
        proxy_cache_valid 200 302 5m;
        proxy_cache_valid 404 1m;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        proxy_cache_lock on;
        proxy_cache_lock_timeout 5s;
        
        # Cache bypass for authenticated requests
        proxy_cache_bypass $http_authorization;
        proxy_no_cache $http_authorization;
        
        # Add cache status header
        add_header X-Cache-Status $upstream_cache_status always;
        
        # CORS headers for API
        add_header Access-Control-Allow-Origin "https://ga4-admin.yourdomain.com" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS, PATCH" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type, Accept, X-Requested-With, Origin" always;
        add_header Access-Control-Allow-Credentials true always;
        add_header Access-Control-Max-Age 86400 always;

        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "https://ga4-admin.yourdomain.com" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS, PATCH" always;
            add_header Access-Control-Allow-Headers "Authorization, Content-Type, Accept, X-Requested-With, Origin" always;
            add_header Access-Control-Allow-Credentials true always;
            add_header Access-Control-Max-Age 86400 always;
            add_header Content-Type text/plain;
            add_header Content-Length 0;
            return 204;
        }
    }

    # Authentication endpoints with stricter rate limiting
    location ~ ^/api/(auth|login|register|reset-password) {
        limit_req zone=auth burst=5 nodelay;
        
        proxy_pass http://backend;
        proxy_set_header Connection "";
        
        # No caching for auth endpoints
        proxy_no_cache 1;
        proxy_cache_bypass 1;
        
        # Security headers
        add_header X-Frame-Options DENY always;
        add_header Cache-Control "no-store, no-cache, must-revalidate" always;
    }

    # File upload endpoints
    location ~ ^/api/(upload|import) {
        limit_req zone=upload burst=3 nodelay;
        
        client_max_body_size 100M;
        client_body_timeout 300s;
        proxy_read_timeout 300s;
        
        proxy_pass http://backend;
        proxy_set_header Connection "";
        
        # No caching for uploads
        proxy_no_cache 1;
        proxy_cache_bypass 1;
    }

    # WebSocket support for real-time features
    location /ws {
        proxy_pass http://backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket specific timeouts
        proxy_read_timeout 86400s;
        proxy_send_timeout 86400s;
    }

    # Health check endpoint (no rate limiting)
    location /health {
        access_log off;
        proxy_pass http://backend/health;
        proxy_connect_timeout 5s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
        
        # No caching for health checks
        proxy_no_cache 1;
        proxy_cache_bypass 1;
    }

    # Static assets with aggressive caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|otf)$ {
        proxy_pass http://frontend;
        
        # Cache static assets
        proxy_cache static_cache;
        proxy_cache_valid 200 1d;
        proxy_cache_valid 404 1m;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        
        # Browser caching
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Cache-Status $upstream_cache_status always;
        
        # Compression
        gzip_static on;
    }

    # Next.js static files
    location /_next/static/ {
        proxy_pass http://frontend;
        
        # Aggressive caching for Next.js static files
        proxy_cache static_cache;
        proxy_cache_valid 200 30d;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Cache-Status $upstream_cache_status always;
    }

    # Favicon with long cache
    location = /favicon.ico {
        proxy_pass http://frontend;
        
        proxy_cache static_cache;
        proxy_cache_valid 200 7d;
        expires 7d;
        add_header Cache-Control "public";
        access_log off;
    }

    # Robots.txt
    location = /robots.txt {
        proxy_pass http://frontend;
        
        proxy_cache static_cache;
        proxy_cache_valid 200 1d;
        expires 1d;
        add_header Cache-Control "public";
        access_log off;
    }

    # Default frontend route
    location / {
        proxy_pass http://frontend;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_cache_bypass $http_upgrade;
        
        # Cache HTML pages briefly
        proxy_cache api_cache;
        proxy_cache_valid 200 1m;
        proxy_cache_bypass $http_authorization $arg_nocache;
        proxy_no_cache $http_authorization $arg_nocache;
        
        # Fallback for SPA routing
        try_files $uri $uri/ @frontend;
    }

    # SPA fallback
    location @frontend {
        proxy_pass http://frontend;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_cache_bypass $http_upgrade;
    }

    # Security - deny access to sensitive files
    location ~ /\.(ht|git|env) {
        deny all;
        return 404;
    }

    location ~ \.(sql|bak|backup|old)$ {
        deny all;
        return 404;
    }

    # Block common exploit attempts
    location ~* (eval\(|base64_decode|gzinflate|rot13|str_rot13) {
        deny all;
        return 444;
    }

    # Custom error pages
    error_page 400 401 403 404 /error.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /error.html {
        root /var/www/html;
        internal;
    }
    
    location = /50x.html {
        root /var/www/html;
        internal;
    }
}

# API subdomain for cleaner API access
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name api.ga4-admin.yourdomain.com;

    # SSL configuration
    ssl_certificate /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/key.pem;
    ssl_dhparam /etc/nginx/ssl/dhparam.pem;

    # Connection limits
    limit_conn conn_limit_per_ip 100;
    limit_conn conn_limit_per_server 2000;

    # API-specific rate limiting
    limit_req zone=api burst=100 nodelay;

    # Security headers for API
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

    # All requests go to backend
    location / {
        proxy_pass http://backend;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # API caching
        proxy_cache api_cache;
        proxy_cache_key "$scheme$request_method$host$request_uri$http_authorization";
        proxy_cache_valid 200 5m;
        proxy_cache_valid 404 1m;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        proxy_cache_bypass $http_authorization $arg_nocache;
        proxy_no_cache $http_authorization $arg_nocache;
        
        # CORS headers
        add_header Access-Control-Allow-Origin "https://ga4-admin.yourdomain.com" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS, PATCH" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type, Accept, X-Requested-With, Origin" always;
        add_header Access-Control-Allow-Credentials true always;
        add_header Access-Control-Max-Age 86400 always;
        add_header X-Cache-Status $upstream_cache_status always;

        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "https://ga4-admin.yourdomain.com" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS, PATCH" always;
            add_header Access-Control-Allow-Headers "Authorization, Content-Type, Accept, X-Requested-With, Origin" always;
            add_header Access-Control-Allow-Credentials true always;
            add_header Access-Control-Max-Age 86400 always;
            add_header Content-Type text/plain;
            add_header Content-Length 0;
            return 204;
        }
    }

    # Auth endpoints with strict limits
    location ~ ^/(auth|login|register|reset-password) {
        limit_req zone=auth burst=5 nodelay;
        
        proxy_pass http://backend;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # No caching for auth
        proxy_no_cache 1;
        proxy_cache_bypass 1;
        add_header Cache-Control "no-store, no-cache, must-revalidate" always;
    }

    # Upload endpoints
    location ~ ^/(upload|import) {
        limit_req zone=upload burst=3 nodelay;
        
        client_max_body_size 100M;
        client_body_timeout 300s;
        proxy_read_timeout 300s;
        
        proxy_pass http://backend;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # No caching for uploads
        proxy_no_cache 1;
        proxy_cache_bypass 1;
    }
}