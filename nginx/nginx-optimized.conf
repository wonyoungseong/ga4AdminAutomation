# GA4 Admin Portal - Optimized Nginx Configuration
# High-performance production configuration with enterprise features

user nginx;
worker_processes auto;
worker_rlimit_nofile 65535;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Load dynamic modules
load_module modules/ngx_http_geoip_module.so;
load_module modules/ngx_http_realip_module.so;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
    accept_mutex off;
}

http {
    # MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Character encoding
    charset utf-8;
    charset_types
        text/xml
        text/plain
        text/vnd.wap.wml
        application/javascript
        application/rss+xml;

    # Logging format with performance metrics
    log_format main_ext '$remote_addr - $remote_user [$time_local] "$request" '
                       '$status $body_bytes_sent "$http_referer" '
                       '"$http_user_agent" "$http_x_forwarded_for" '
                       'rt=$request_time uct="$upstream_connect_time" '
                       'uht="$upstream_header_time" urt="$upstream_response_time" '
                       'cache=$upstream_cache_status '
                       'host=$host '
                       'scheme=$scheme';

    # Conditional logging to reduce I/O
    map $status $loggable {
        ~^[23]  0;  # Don't log 2xx and 3xx
        default 1;  # Log everything else
    }

    access_log /var/log/nginx/access.log main_ext if=$loggable;
    error_log /var/log/nginx/error.log warn;

    # Hide nginx version
    server_tokens off;

    # Performance optimizations
    sendfile on;
    sendfile_max_chunk 1m;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 1000;
    types_hash_max_size 2048;
    server_names_hash_bucket_size 128;
    client_max_body_size 50M;
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    output_buffers 1 32k;
    postpone_output 1460;

    # Timeouts
    client_body_timeout 30s;
    client_header_timeout 30s;
    send_timeout 30s;
    reset_timedout_connection on;

    # File caching
    open_file_cache max=200000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_comp_level 6;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_types
        application/atom+xml
        application/geo+json
        application/javascript
        application/x-javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rdf+xml
        application/rss+xml
        application/wasm
        application/xml
        font/woff
        font/woff2
        image/svg+xml
        text/css
        text/javascript
        text/plain
        text/xml;

    # Brotli compression (if available)
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # SSL optimization
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:50m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;
    ssl_buffer_size 1400;

    # Security headers template
    map $sent_http_content_type $security_headers {
        ~*text/html "nosniff";
        default "";
    }

    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api:20m rate=100r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=10r/m;
    limit_req_zone $binary_remote_addr zone=upload:10m rate=5r/m;
    limit_req_zone $binary_remote_addr zone=global:50m rate=200r/s;

    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;
    limit_conn_zone $server_name zone=conn_limit_per_server:10m;

    # Real IP configuration for load balancers
    set_real_ip_from 10.0.0.0/8;
    set_real_ip_from 172.16.0.0/12;
    set_real_ip_from 192.168.0.0/16;
    set_real_ip_from 127.0.0.1/32;
    real_ip_header X-Forwarded-For;
    real_ip_recursive on;

    # Upstream definitions with health checks and load balancing
    upstream backend {
        least_conn;
        
        # Main backend servers
        server backend:8000 max_fails=3 fail_timeout=30s weight=1;
        # server backend-2:8000 max_fails=3 fail_timeout=30s weight=1;  # For scaling
        
        # Connection pooling
        keepalive 32;
        keepalive_requests 100;
        keepalive_timeout 60s;
    }

    upstream frontend {
        least_conn;
        
        # Main frontend servers  
        server frontend:3000 max_fails=3 fail_timeout=30s weight=1;
        # server frontend-2:3000 max_fails=3 fail_timeout=30s weight=1;  # For scaling
        
        # Connection pooling
        keepalive 32;
        keepalive_requests 100;
        keepalive_timeout 60s;
    }

    # Cache zones
    proxy_cache_path /tmp/nginx-cache 
                     levels=1:2 
                     keys_zone=api_cache:100m 
                     max_size=10g 
                     inactive=60m 
                     use_temp_path=off;

    proxy_cache_path /tmp/nginx-static-cache 
                     levels=1:2 
                     keys_zone=static_cache:100m 
                     max_size=5g 
                     inactive=1d 
                     use_temp_path=off;

    # Geo-blocking (example - customize as needed)
    geo $blocked_country {
        default 0;
        # 1.2.3.0/24 1;  # Block specific IP ranges if needed
    }

    # Bot detection
    map $http_user_agent $blocked_bot {
        default 0;
        ~*bot 0;  # Allow search engine bots
        ~*(curl|wget|python|postman) 1;  # Block automated tools
    }

    # Security includes
    include /etc/nginx/ssl/ssl-params.conf;

    # Main server configurations
    include /etc/nginx/conf.d/*.conf;

    # Default fallback server to prevent host header attacks
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;
        return 444;  # Close connection without response
    }

    server {
        listen 443 ssl http2 default_server;
        listen [::]:443 ssl http2 default_server;
        server_name _;
        
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        
        return 444;  # Close connection without response
    }
}