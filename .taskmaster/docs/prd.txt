# GA 권한 관리 자동화 시스템 PRD

## 개요 (Overview)

Google Analytics Admin API를 활용하여 GA 계정의 사용자 권한 부여, 갱신, 삭제 프로세스를 자동화하고 관리하는 웹 서비스입니다. 

여러 고객사의 Google Analytics를 관리하는 서비스 파트너사를 대상으로, 수동 권한 관리 업무를 웹 기반 자동화 워크플로우로 전환하여 운영 효율성을 높이고 보안을 강화합니다.

## 핵심 기능 (Core Features)

### 1. 신청자 역할 관리 (Requester Role Management)
- **자동 역할 획득**: 이름, 소속, 이메일 제출 시 180일 기한의 신청자 역할 자동 부여
- **역할 만료 알림**: 30일, 7일, 1일, 당일 전 만료 예정 알림 메일 발송
- **자동 갱신**: 만료 후 재신청 시 Super Admin 승인 없이 180일 자동 연장

### 2. GA 권한 신청 워크플로우
- **자동 승인**: Viewer(60일)/Analyst(60일) 권한 즉시 승인 및 GA 반영
- **수동 승인**: Editor(7일)/Administrator(90일) 권한 Super Admin 승인 필요
- **승인 처리**: 관리자 대시보드에서 승인/거절 및 거절 사유 기록
- **결과 알림**: 승인/거절 결과를 신청자와 권한 대상자에게 메일 통지

### 3. 권한 생명주기 관리
- **만료 알림**: 모든 권한에 대해 30일, 7일, 1일, 당일 전 만료 예정 알림
- **자동 삭제**: 만료일 도래 시 GA에서 자동 삭제 및 상태 변경
- **권한 업그레이드**: 기존 권한 업그레이드 시 새 역할 기본 기간으로 만료일 재설정

### 4. 관리자 기능
- **고객사 관리**: 고객사 생성 및 Service Account JSON 파일 연결
- **일일 요약**: 전날 시스템 활동 요약 메일 발송
- **감사 로그**: 모든 권한 변경 이력 추적 및 관리

## 사용자 경험 (User Experience)

### 사용자 페르소나
1. **Super Admin (슈퍼유저)**
   - 시스템 최고 관리자
   - 고객사/Service Account 관리
   - Editor/Admin 권한 최종 승인
   - 시스템 정책 설정

2. **Requester (신청자)**
   - 권한 신청 주체
   - 180일 기한 신청자 역할
   - Viewer/Analyst 자동 승인 권한
   - Editor/Admin 수동 승인 신청

3. **GA User (권한 사용자)**
   - 실제 GA 접근 권한 보유자
   - 이메일 알림 수신 전용
   - 직접적인 시스템 조작 없음

## 기술 아키텍처 (Technical Architecture)

### 시스템 컴포넌트
- **백엔드**: Python (FastAPI)
- **프론트엔드**: JavaScript 프레임워크 (React/Vue)
- **데이터베이스**: Supabase (PostgreSQL)
- **외부 API**: Google Analytics Admin API
- **알림 시스템**: Gmail API
- **스케줄러**: Cron Jobs/Celery

### 데이터 모델
1. **website_users**: 웹사이트 사용자 정보 및 역할 관리
2. **clients**: 고객사 정보
3. **service_accounts**: Google Service Account 정보
4. **permission_grants**: GA 권한 부여 현황 및 상태
5. **audit_logs**: 모든 권한 변경 감사 로그

### API 설계
- **사용자 관리 API**: 신청자 등록, 역할 관리
- **권한 관리 API**: GA 권한 신청, 승인, 거절
- **관리자 API**: 고객사 관리, 승인 처리
- **스케줄러 API**: 자동 만료 처리, 알림 발송

## 개발 로드맵 (Development Roadmap)

### Phase 1: 기본 인프라 구축 (MVP)
1. **데이터베이스 스키마 설계 및 구현**
   - Supabase 설정 및 테이블 생성
   - 초기 데이터 마이그레이션

2. **사용자 인증 및 역할 관리 시스템**
   - 신청자 자동 등록 기능
   - Super Admin 관리 기능
   - 기본 웹 인터페이스

3. **GA Admin API 연동 기반 구조**
   - Service Account 연동
   - 기본 권한 부여/삭제 기능

### Phase 2: 핵심 권한 관리 기능
1. **권한 신청 워크플로우**
   - 자동 승인 (Viewer/Analyst)
   - 수동 승인 (Editor/Administrator)
   - 관리자 승인 대시보드

2. **알림 시스템 구축**
   - Gmail API 연동
   - 메일 템플릿 시스템
   - 알림 발송 로직

### Phase 3: 자동화 및 스케줄링
1. **자동 만료 시스템**
   - 스케줄링 작업 구현
   - 자동 삭제 기능
   - 만료 예정 알림

2. **감사 및 모니터링**
   - 감사 로그 시스템
   - 일일 요약 보고서
   - 에러 핸들링 및 알림

### Phase 4: UI/UX 개선 및 최적화
1. **프론트엔드 개선**
   - 사용자 친화적 인터페이스
   - 반응형 디자인
   - 실시간 상태 업데이트

2. **성능 최적화**
   - API 응답 시간 개선
   - 데이터베이스 쿼리 최적화
   - 캐싱 전략 구현

## 논리적 의존성 체인 (Logical Dependency Chain)

### 기반 시설 (Foundation)
1. **데이터베이스 스키마** → 모든 기능의 기반
2. **사용자 인증 시스템** → 권한 관리의 전제조건
3. **GA API 연동** → 핵심 비즈니스 로직

### 핵심 기능 (Core Features)
1. **신청자 역할 관리** → 권한 신청의 전제조건
2. **기본 권한 부여** → 자동 승인 기능
3. **수동 승인 시스템** → 관리자 승인 기능

### 자동화 (Automation)
1. **알림 시스템** → 사용자 경험 향상
2. **스케줄링 시스템** → 자동 만료 처리
3. **감사 로그** → 추적성 및 보안

### 사용자 인터페이스 (User Interface)
1. **기본 웹 인터페이스** → 최소 사용 가능한 제품
2. **관리자 대시보드** → 수동 승인 처리
3. **고급 UI/UX** → 사용자 편의성 향상

## 위험 요소 및 완화 방안 (Risks and Mitigations)

### 기술적 도전
- **위험**: Google API 할당량 초과 및 오류 처리
- **완화**: 재시도 로직, 오류 알림 시스템, API 사용량 모니터링

### MVP 정의
- **위험**: 과도한 기능 구현으로 인한 개발 지연
- **완화**: 단계적 개발, 필수 기능 우선 구현, 정기적인 검토

### 리소스 제약
- **위험**: 개발 시간 및 인력 부족
- **완화**: 명확한 우선순위 설정, 외부 라이브러리 활용, 자동화 도구 사용

### 보안 위험
- **위험**: Service Account 키 관리 및 데이터 보안
- **완화**: 환경 변수 사용, 권한 최소화 원칙, 정기적인 보안 검토

## 부록 (Appendix)

### 개발 원칙
- **SOLID 원칙**: 단일 책임, 개방-폐쇄, 리스코프 치환, 인터페이스 분리, 의존성 역전
- **TDD**: 테스트 주도 개발 방식
- **Clean Architecture**: 책임과 관심사 분리
- **코드 품질**: 500줄 제한, DRY 원칙, 단순성 우선

### 명명 규칙
- **파일명**: snake_case (예: user_service.py)
- **클래스명**: PascalCase (예: UserService)
- **함수/변수명**: snake_case (예: get_user())
- **상수**: UPPER_SNAKE_CASE (예: MAX_USERS)

### Git 규칙
- `--no-verify` 사용 금지
- 명확하고 일관된 커밋 메시지
- 적절한 크기의 커밋 단위

### 문서화 요구사항
- 주요 컴포넌트별 `/docs/[component].md` 작성
- 복잡한 로직에 대한 한국어 주석
- 코드와 함께 문서 업데이트 